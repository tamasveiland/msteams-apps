# This is a basic workflow to help you get started with Actions

name: CI/CD for LeaveBot Microsoft Teams app

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
     
    - name: Restore NuGet Packages
      run: nuget restore "Professional Services\Professional Services.sln"
 
    - name: Build and Publish Web App
      run: msbuild "Professional Services\Professional Services.sln" /p:Configuration=Release /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation=".\Publish\WebApp.zip"
 
    - name: Upload Artifact - Web App
      uses: actions/upload-artifact@v1.0.0
      with:
        name: published_webapp
        path: Professional Services/LeaveBot/Publish
    # Copy manifest folder
    - name: Remove File
      uses: JesseTG/rm@v1.0.0
      with:
        # The file path to remove
        path: "Professional Services\\LeaveBot\\Manifest\\Leave App Manifest.zip"
    - name: Compress Teams App
      run: Compress-Archive "Professional Services\\LeaveBot\\Manifest\\*.*" ./TeamsApp.zip
    - name: Upload Artifact - Teams App
      uses: actions/upload-artifact@v1.0.0
      with:
        name: teams_app
        path: ./TeamsApp.zip


  deploy_teams_app:   
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - uses: actions/checkout@v2
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          # Artifact name
          name: "teams_app" # optional
          # Destination path
          path: ./package # optional
      - name: Office 365 CLI Login
        uses: pnp/action-cli-login@v1.0.0
        with:
          # Username (email address) of the admin
          ADMIN_USERNAME: ${{ secrets.adminUsername }}
          # Password of the admin
          ADMIN_PASSWORD: ${{ secrets.adminPassword }}
      - name: Office 365 CLI Run Script
        uses: pnp/action-cli-runscript@v1.0.0
        with:
          # Relative path of the script in your repo.
          O365_CLI_SCRIPT_PATH: './scripts/upload_manifest.sh' # optional
          # Office 365 CLI Script
          # O365_CLI_SCRIPT: # optional
          # Used only with O365_CLI_SCRIPT. If true the assumption is the script passed in O365_CLI_SCRIPT will be a PowerShell script, otherwise the assumption is bash script. Default is false
          IS_POWERSHELL: false # optional

  deploy_web_app:   
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: windows-latest
    needs: [build]
    
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          # Artifact name
          name: "published_webapp" # optional
          # Destination path
          path: ./package # optional
      #- name: Azure WebApp
      #  uses: Azure/webapps-deploy@v2
      #  with:
      #    # Name of the Azure Web App
      #    app-name: 
      #    # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
      #    publish-profile: # optional
      #    # Enter an existing Slot other than the Production slot
      #    slot-name: # optional, default is production
      #    # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
      #    package: # optional, default is .
      #    # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
      #    images: 
      #    # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
      #    configuration-file: # optional
      #    # Enter the start up command. For ex. dotnet run or dotnet run
      #    startup-command: # optional
